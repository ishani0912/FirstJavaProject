import java.util.Arrays;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

import com.globalpayex.college.entities.Address;
import com.globalpayex.college.entities.Student;

public class StudentStream {
	
	public static void main(String[] args) {
		
		List<Student> students = Arrays.asList(
				new Student("Ishani", 'F', 10, 90, new Address("Guj", "IN", 380015)),
				new Student("Meet", 'M', 11, 100, new Address("Vij", "IN", 380025)),
				new Student("Bina", 'F', 12, 60, new Address("Mec", "USA", 380015)),
				new Student("Kirtan", 'M', 13, 50)
				
				);
		
		String st = students.stream()
				.filter(student -> student.marks>80)
				.map(student -> student.name)
				.collect(Collectors.joining(","));
		
		String str = students.stream()
				.filter(student -> student.isAddressPresent() && student.getAddress().getCountry().equals("USA"))
				.map(student -> student.name)
				.collect(Collectors.joining(","));
		
		System.out.println(str);
		
		
		double avg = students.stream()
				.collect(Collectors.averagingDouble(student -> student.marks));
		
		System.out.println(avg);
		
		//grouping by gender
		Map<Character, List<Student>> genderMap = students.stream()
				.collect(Collectors.groupingBy(student -> student.gender));
					
		System.out.println(genderMap);
		
		
		Map<Boolean, List<Student>> marksMap = students.stream()
				.collect(Collectors.partitioningBy(student -> student.marks >=80));
		
		System.out.println(marksMap);
		
		
		
		
		
		
		
	}

}
